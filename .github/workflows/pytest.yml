name: Pytest

on:
  push:
    branches:
      - main
      - develop
      - database-connection
    tags:
      - "v*"
  pull_request:
    branches:
      - main
      - develop
    paths-ignore:
      - "**.md"
      - ".gitignore"
      - "LICENSE"
      - ".env*"

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:8.0
        ports:
          - "37017:27017"
        env:
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: test-admin-password
        # Optionally, you can add a healthcheck here if needed
        # like test: ["CMD", "mongo", "--username", "admin", "--password", "test-admin-password", "--eval", "db.runCommand({ ping: 1 })"]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      # Cache Poetry installation (to avoid repeatedly downloading Poetry)
      - name: Cache Poetry
        uses: actions/cache@v4
        with:
          path: ~/.local
          key: poetry-${{ hashFiles('**/poetry.lock') }}-1

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      # Cache your virtual environment directory to skip installing dependencies if lock file hasn't changed
      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: .venv
          key: pydeps-${{ hashFiles('**/poetry.lock') }}

      # Install dependencies â€” only if the cache is missing
      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: |
          poetry install --no-interaction

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PWD/src" >> $GITHUB_ENV

      # Run tests
      - name: Test with pytest
        run: |
          poetry run pytest
